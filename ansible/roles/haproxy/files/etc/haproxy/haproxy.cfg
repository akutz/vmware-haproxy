global
  log stdout format raw local0 debug
  chroot /var/lib/haproxy
  stats socket /run/haproxy.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  stats timeout 30s
  user haproxy
  group haproxy
  master-worker
  # Setting maxconn in the global section is what successfully sets the ulimit on the
  # host, otherwise we run out of file descriptors (defaulted at 4096).
  # Note: this value is set to a default to be used in a testing environment, but
  # is updated via ansible to the production value.
  maxconn 4000
  # This property indicates the number of maximum number of reloads a worker
  # will survive before being forcefully killed. This number is required to control
  # the rate at which processes can scale due to the number of reloads outscaling
  # the rate processes are reaped when all of their connections have been cleaned up.
  # This number was derived by taking the average virtual memory consumption for a
  # single HA Proxy process under load, ~28MB, and allocating HA Proxy 3GB out of 4GB
  # of the total virtual memory space.
  mworker-max-reloads 100

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  # An alternative list with additional directives can be obtained from
  #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

defaults
  mode    tcp
  log     global
  option  tcplog
  option  dontlognull
  option  tcp-smart-accept
  timeout check       5s
  timeout connect     9s
  timeout client      10s
  timeout queue       5m
  timeout server      10s
  # tunnel timeout needs to be set at a lowish value to deal with the frequent
  # reloads invoked by dataplaneapi at scale. With a higher value set, established
  # connections will hang around and prevent haproxy from killing all off older processes
  # because those old processes won't terminate those established connections unless
  # it is told to do so. Having these processes linger for too long can eventually
  # starve the system of resources as the spawn rate of processes exceeds the death rate.
  timeout tunnel      5m
  timeout client-fin  10s

# Stats are disabled by default because enabling them on a non-local IP address
# would result in allocating a port that could result in a conflict with one
# of the binds programmed at runtime.
#
# To enable stats, uncomment the following section and replace SYSTEM_IP_ADDR
# with the IP address of the HAProxy host.
#frontend stats
#  mode  http
#  bind  SYSTEM_IP_ADDR:8404
#  stats enable
#  stats uri     /stats
#  stats refresh 500ms
#  stats hide-version
#  stats show-legends

userlist controller
  user client insecure-password cert

# Please do remove this section; it is used when performing integration
# testing with the HAProxy Docker image.
#
# This section, along with the default user above, will be removed by
# Ansible when building the HAProxy appliance's OVA.
program api
  command dataplaneapi --log-level=debug --scheme=https --haproxy-bin=/usr/sbin/haproxy --config-file=/etc/haproxy/haproxy.cfg --reload-cmd="kill -SIGUSR2 1" --reload-delay=5 --tls-host=0.0.0.0 --tls-port=5556 --tls-certificate=/etc/haproxy/server.crt --tls-key=/etc/haproxy/server.key --userlist=controller --update-map-files
  no option start-on-reload
